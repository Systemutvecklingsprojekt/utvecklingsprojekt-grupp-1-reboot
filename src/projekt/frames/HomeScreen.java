/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projekt.frames;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import projekt.User;
import projekt.helpers.Database;
import java.sql.ResultSet;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import projekt.Refactor;

/**
 *
 * @author Amand
 */
public class HomeScreen extends javax.swing.JFrame
{

	private int id;
	private String firstName;
	private String lastName;
	private User user;
        

	/**
	 * Creates new form Homescreen
	 */
	public HomeScreen(int id)
	{
		initComponents();
		jBAdminUsers.setVisible(false);
		this.id = id;
		this.user = new User(this.id);
                checkNotis();

		adminCheck();
		lblWelcome.setText("VÄLKOMMEN: " + user.getFirstName() + " " + user.getLastName() + "!");
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBFormal = new javax.swing.JButton();
        jBInformal = new javax.swing.JButton();
        jBMeetings = new javax.swing.JButton();
        jBProfile = new javax.swing.JButton();
        jBAdminUsers = new javax.swing.JButton();
        lblSearch = new javax.swing.JLabel();
        jtfSearch = new javax.swing.JTextField();
        jBsearch = new javax.swing.JButton();
        lblWelcome = new javax.swing.JLabel();
        jBSignOut = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableNotiser = new javax.swing.JTable();
        jlblNotiser = new javax.swing.JLabel();
        jBtnNotis = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jBFormal.setBackground(new java.awt.Color(204, 204, 255));
        jBFormal.setText("Formell blogg");
        jBFormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBFormalActionPerformed(evt);
            }
        });

        jBInformal.setBackground(new java.awt.Color(204, 204, 255));
        jBInformal.setText("Informell blogg");
        jBInformal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBInformalActionPerformed(evt);
            }
        });

        jBMeetings.setBackground(new java.awt.Color(204, 204, 255));
        jBMeetings.setText("Möten");
        jBMeetings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBMeetingsActionPerformed(evt);
            }
        });

        jBProfile.setBackground(new java.awt.Color(204, 204, 255));
        jBProfile.setText("Profil");
        jBProfile.setToolTipText("");
        jBProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBProfileActionPerformed(evt);
            }
        });

        jBAdminUsers.setBackground(new java.awt.Color(204, 204, 255));
        jBAdminUsers.setText("Hantera användare och inlägg");
        jBAdminUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAdminUsersActionPerformed(evt);
            }
        });

        lblSearch.setText("Sök på nyckelord i inlägg på bloggar");

        jBsearch.setBackground(new java.awt.Color(204, 204, 255));
        jBsearch.setText("Sök");
        jBsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBsearchActionPerformed(evt);
            }
        });

        lblWelcome.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblWelcome.setText("VÄLKOMMEN");

        jBSignOut.setBackground(new java.awt.Color(204, 204, 255));
        jBSignOut.setText("Logga ut");
        jBSignOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSignOutActionPerformed(evt);
            }
        });

        jTableNotiser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "NotisID", "Text", "Typ", "Skapad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableNotiser);

        jlblNotiser.setText("Notiser:");

        jBtnNotis.setText("Gå till notis");
        jBtnNotis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnNotisActionPerformed(evt);
            }
        });

        jButton1.setText("Följ användare");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSearch)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(lblWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jBSignOut))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jtfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jBAdminUsers, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBFormal, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBInformal, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jBProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBMeetings, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlblNotiser, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtnNotis)
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWelcome)
                    .addComponent(jBSignOut)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(lblSearch)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBsearch))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBFormal, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBInformal, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBMeetings, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBAdminUsers, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addComponent(jlblNotiser)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBtnNotis)
                        .addGap(20, 20, 20))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBFormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBFormalActionPerformed
		new Blog(user, true).setVisible(true);

    }//GEN-LAST:event_jBFormalActionPerformed

    private void jBInformalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBInformalActionPerformed
		new Blog(user, false).setVisible(true);


    }//GEN-LAST:event_jBInformalActionPerformed

    private void jBMeetingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBMeetingsActionPerformed
		new PersonalMeetings(user).setVisible(true);
    }//GEN-LAST:event_jBMeetingsActionPerformed

    private void jBProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBProfileActionPerformed
		new Profile(id, user).setVisible(true);
    }//GEN-LAST:event_jBProfileActionPerformed

    private void jBAdminUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAdminUsersActionPerformed

		new ManageUsers().setVisible(true);
    }//GEN-LAST:event_jBAdminUsersActionPerformed

    private void jBsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBsearchActionPerformed

		new SearchResults(jtfSearch.getText().toLowerCase()).setVisible(true);
    }//GEN-LAST:event_jBsearchActionPerformed

    private void jBSignOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSignOutActionPerformed
		new LogIn().setVisible(true);
		this.dispose();
    }//GEN-LAST:event_jBSignOutActionPerformed

    private void jBtnNotisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnNotisActionPerformed
        if (jTableNotiser.getValueAt(jTableNotiser.getSelectedRow(), 3).equals("Meeting")) {
            int id = (int) (jTableNotiser.getValueAt(jTableNotiser.getSelectedRow(), 0));
            new ShowMeeting(id).setVisible(true);
        }
        
        if (jTableNotiser.getValueAt(jTableNotiser.getSelectedRow(), 3).equals("Post")) {
            int id = (int) (jTableNotiser.getValueAt(jTableNotiser.getSelectedRow(), 0));
            new ShowPost(this.user,id).setVisible(true);
        }
        
        if (jTableNotiser.getValueAt(jTableNotiser.getSelectedRow(), 3).equals("ProposedMeeting")) {
            int id = (int) (jTableNotiser.getValueAt(jTableNotiser.getSelectedRow(), 0));
            new PersonalMeetings(this.user).setVisible(true);
        }
        
        
    }//GEN-LAST:event_jBtnNotisActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

	private void adminCheck()
	{

		if (user.getAdmin().equals("J")) {
			jBAdminUsers.setVisible(true);
		}
	}
        
        private void checkNotis() {
            try {
            String check = Database.fetchSingle("Select NID from User_Notice where UID =" + id);
                       // if(check != null) {
                         ArrayList<String> types = new ArrayList<>();   
                         ArrayList<String> date = new ArrayList<>(); 
                         ArrayList<String> text = new ArrayList<>(); 
                         ArrayList<String> NotisID = new ArrayList<>(); 
                         ResultSet rs;
                         
                        
//                        types = Database.fetchColumn("Select TypeName from Notice_Type where NoticeTypeID IN (Select NoticeTypeID from Notice where NoticeID IN(Select NID from User_Notice where UID =" + this.id + "))");
//                        date = Database.fetchColumn("Select DateTime from Notice where NoticeID IN(Select NID from User_Notice where UID =" + id+ ")");
//                        text = Database.fetchColumn("Select Topic from Notice where NoticeID IN(Select NID from User_Notice where UID =" + id+ ")");
//                        NotisID = Database.fetchColumn("Select NoticeID from Notice where NoticeID in (Select NID from User_Notice Where UID =" + id + ")");
                        
                        rs = Database.fetchRows("SELECT NoticeID, Topic, DateTime, TypeName FROM Notice JOIN Notice_Type ON Notice.NoticeTypeID = Notice_Type.NoticeTypeID JOIN User_Notice ON Notice.NoticeID = User_Notice.NID WHERE UID = " + id);
                        DefaultTableModel dmb = Refactor.tableModelBuilder(rs);
                        jTableNotiser = new JTable(dmb);
                        jScrollPane1.setViewportView(jTableNotiser);
                        jTableNotiser.setVisible(true);
                        
                        
                        
                        
                      //  DefaultTableModel model = (DefaultTableModel) jTableNotiser.getModel();
                        //model.addRow(new Object[]{null, beskrivning, startTid, meetingDate});     
                        
                                
                                
                        
                        //Database.fetchSingle("Select MeetingID from Meeting where NotisID =" + check); //hämta specifika möten, loop?
                        //Database.fetchSingle("Select PostID from Post where NotisID =" + check ); // Hämta specifika posts
                        //Database.executeUpdate("Delete from Notiser where notisID =" + check); //Ta bort notiser, de har aviserats
                        //Databasen , vettefan hur men på något sätt så
                        //table.getselectedValue(column med 1)
                        //if(getSelectedValue type = 2/1)
                        //getMeetingID->ShowMeeting(ID)
                        //getPostID->sHOWPost(id);
                        //Största problemet: Kolla date/timestamp mot localdatetime - en tabell att få ett RS av så man slipper fetch single
                        //Selecta vilka notiser man vill ha, möten/post mer? Remove knapp brevid?
                        //}


        } catch (Exception e) {
            e.printStackTrace();
        }



        }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAdminUsers;
    private javax.swing.JButton jBFormal;
    private javax.swing.JButton jBInformal;
    private javax.swing.JButton jBMeetings;
    private javax.swing.JButton jBProfile;
    private javax.swing.JButton jBSignOut;
    private javax.swing.JButton jBsearch;
    private javax.swing.JButton jBtnNotis;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableNotiser;
    private javax.swing.JLabel jlblNotiser;
    private javax.swing.JTextField jtfSearch;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblWelcome;
    // End of variables declaration//GEN-END:variables
}
