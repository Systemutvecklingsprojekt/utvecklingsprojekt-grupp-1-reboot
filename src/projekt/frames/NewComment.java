/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projekt.frames;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import projekt.User;
import projekt.helpers.Database;

/**
 *
 * @author anton
 */
public class NewComment extends javax.swing.JFrame {
    
    private User user;
    private int postId;
    /**
     * Creates new form NewComment
     */
    public NewComment(User user, int postId) {
        initComponents();
        
        this.user = user;
        this.postId = postId;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtfComment = new javax.swing.JTextField();
        jbPublishComment = new javax.swing.JButton();
        jbBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jtfComment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCommentActionPerformed(evt);
            }
        });

        jbPublishComment.setText("Publicera kommentar");
        jbPublishComment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPublishCommentActionPerformed(evt);
            }
        });

        jbBack.setText("Tillbaka");
        jbBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbPublishComment))
                    .addComponent(jtfComment, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jtfComment, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbBack)
                    .addComponent(jbPublishComment))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfCommentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCommentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCommentActionPerformed

    private void jbBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBackActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbBackActionPerformed

    private void jbPublishCommentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPublishCommentActionPerformed
        String comment = jtfComment.getText();
        int userId = user.getUserID();
        System.out.println(comment + " " + userId + " " + postId);
        String query = "INSERT INTO Comments (UserID, PostID, Text) VALUES(" + userId + ", " + postId + ",'" + comment + "')";
        
        try {
            Database.executeUpdate(query);
        } catch (SQLException ex) {
            System.out.println(query);
        }
        JOptionPane.showMessageDialog(null, "Kommentar är nu tillagd!");
        this.dispose();
    }//GEN-LAST:event_jbPublishCommentActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbBack;
    private javax.swing.JButton jbPublishComment;
    private javax.swing.JTextField jtfComment;
    // End of variables declaration//GEN-END:variables
}
